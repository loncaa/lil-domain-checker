{"version":3,"sources":["SubmitPageForm.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_PAGE_METADATA","gql","PageMetadata","props","data","domain","title","description","httpsLinksCount","httpLinksCount","internalLinksCount","externalLinksCount","SubmitPageForm","useLazyQuery","onCompleted","setPageDomain","fetchPageMetadata","loading","error","useState","pageDomain","onSubmit","e","preventDefault","variables","type","value","onChange","target","App","state","handleChange","bind","handleSubmit","event","this","setState","className","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","HttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"sRAGMA,EAAsBC,YAAH,2QAcnBC,EAAe,SAACC,GACpB,MAQIA,EAAMC,KAPRC,EADF,EACEA,OACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,gBACAC,EALF,EAKEA,eACAC,EANF,EAMEA,mBACAC,EAPF,EAOEA,mBAGF,OACE,gCACE,yCAAYL,EAAZ,OACA,+CAAkBC,EAAlB,OACA,kDAAqBG,EAArB,OACA,kDAAqBC,EAArB,OACA,8CAAiBF,EAAjB,OACA,+CAAkBD,EAAlB,SANQH,IAuCCO,EA5BQ,WACrB,MAAsDC,YACpDb,EACA,CAAEc,YAAa,kBAAMC,EAAc,OAFrC,mBAAOC,EAAP,YAA4BC,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,MAAOd,EAA5C,EAA4CA,KAI5C,EAAoCe,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBL,EAAnB,KAEA,OAAIE,EAAgB,4CAChBC,EAAa,UAAN,OAAiBA,GAG1B,gCACE,uBAAMG,SAAU,SAACC,GACfA,EAAEC,iBACFP,EAAkB,CAAEQ,UAAW,CAAEnB,OAAQe,MAF3C,UAIE,gCACE,uBAAOK,KAAK,OAAOC,MAAON,EAAYO,SAAU,SAACL,GAAD,OAAOP,EAAcO,EAAEM,OAAOF,YAEhF,uBAAOD,KAAK,SAASC,MAAM,eAExB,OAAJtB,QAAI,IAAJA,OAAA,EAAAA,EAAMY,oBACL,cAAC,EAAD,CAAcZ,KAAMA,EAAKY,wBC7BlBa,G,wDA3Bb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IACD2B,MAAQ,CAAEJ,MAAO,IAEtB,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALH,E,gDAQnB,SAAaE,GACXC,KAAKC,SAAS,CAAEV,MAAOQ,EAAMN,OAAOF,U,0BAGtC,SAAaQ,GACXA,EAAMX,mB,oBAGR,WACE,OACE,qBAAKc,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,Y,GArBQC,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCCRQ,EAAW,IAAIC,IAAS,CAAEC,IAAK,aAE/BC,EAAS,IAAIC,IAAa,CAC9BC,KAAML,EACNM,MAAO,IAAIC,MAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAG1BtB,M","file":"static/js/main.c8d7e189.chunk.js","sourcesContent":["import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\n\nconst FETCH_PAGE_METADATA = gql`\n  query PageMetadata($domain: String!) {\n    fetchPageMetadata(domain: $domain) {\n      domain\n      title\n      description\n      httpsLinksCount\n      httpLinksCount\n      internalLinksCount\n      externalLinksCount\n    }\n  }\n`;\n\nconst PageMetadata = (props) => {\n  const {\n    domain,\n    title,\n    description,\n    httpsLinksCount,\n    httpLinksCount,\n    internalLinksCount,\n    externalLinksCount,\n  } = props.data;\n\n  return (\n    <div key={domain}>\n      <p> Title: {title} </p>\n      <p> Description: {description} </p>\n      <p> Internal Links: {internalLinksCount} </p>\n      <p> External Links: {externalLinksCount} </p>\n      <p> HTTP links: {httpLinksCount} </p>\n      <p> HTTPS links: {httpsLinksCount} </p>\n    </div>\n  );\n};\n\nconst SubmitPageForm = () => {\n  const [fetchPageMetadata, { loading, error, data }] = useLazyQuery(\n    FETCH_PAGE_METADATA,\n    { onCompleted: () => setPageDomain(\"\") }\n  );\n  const [pageDomain, setPageDomain] = useState(\"\");\n\n  if (loading) return <p>Loading ...</p>;\n  if (error) return `Error! ${error}`;\n\n  return (\n    <div>\n      <form onSubmit={(e) => {  \n        e.preventDefault()\n        fetchPageMetadata({ variables: { domain: pageDomain } })\n        }}>\n        <label>\n          <input type=\"text\" value={pageDomain} onChange={(e) => setPageDomain(e.target.value)} />\n        </label>\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      {data?.fetchPageMetadata && (\n        <PageMetadata data={data.fetchPageMetadata} />\n      )}\n    </div>\n  );\n};\n\nexport default SubmitPageForm;\n","import React, { Component } from \"react\";\nimport SubmitPageForm from './SubmitPageForm';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SubmitPageForm />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from \"@apollo/client\";\n\nconst httpLink = new HttpLink({ uri: '/graphql' })\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}